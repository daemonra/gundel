// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id String @id
  username String @unique
  displayName String 
  email String? @unique
  passwordHash String?
  googleId String? @unique
  avatarUrl String?
  bio String?
  sessions Session[]
  albums Album[]

  createdAt DateTime @default(now())
  
  @@map("users")
}

model Session {
  id String @id
  userId String
  expiresAt DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Album {
  id String @id @default(cuid())
  name String @unique
  content String
  userId String 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  pictures Picture[]

  @@map("albums")
  
}

model Picture{
  id String @id @default(cuid())
  url String 
  uploadedAt DateTime @default(now())
  albumId String
  album Album @relation(fields: [albumId], references: [id], onDelete: Cascade)

  @@map("pictures")
}
